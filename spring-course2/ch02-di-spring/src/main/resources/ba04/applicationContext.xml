<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">

    <!--
        引用类型的自动注入 : spring框架根据某些规则可以给引用类型赋值 . 不用你在给引用类型赋值了
        使用的规则是byName , byType.
        1. byName(按名称注入) : java类中引用类型的属性名和spring容器中(配置文件)<bean的id名称一样
                              且数据类型是一致的 , 这样的容器中的bean , spring能够赋值给引用类型.
             语法 :
                <bean id="xx" class="yyy" autowire="byName">
                    简单类型属性赋值
                </bean>
         2. byType(按类型注入) : java类中引用类型的数据类型和spring容器中(配置文件)<bean>的class属性
                                是同源关系的 , 这样的bean能够赋值给引用类型
              同源就是一类的意思 :
                1. java类中引用类型的数据类型和bean的class的值是一样的
                2. java类中引用类型的数据类型和bean的class的值父子类关系的.
                3. java类中引用类型的数据类型和bean的calss的值接口实现类关系的
    -->
    <!--byName-->
    <bean id="myStudent" class="com.lypowernode.ba04.Student" autowire="byName">
        <property name="name" value="生悟"/><!--set注入-->
        <property name="age" value="29"/>
        <!--引用类型-->
       <!-- <property name="school" ref="mySchool"/>-->
    </bean>

    <!--声明School类的对象mySchool-->
    <!--java中Student类中引用类型School的属性名school和spring容器中(配置文件)<bean的id名称school一样
                              且数据类型是一致的 , 这样的容器中的bean , spring能够赋值给引用类型.-->
    <bean id="school" class="com.lypowernode.ba04.School">
        <property name="name" value="黄埔一期"/>
        <property name="address" value="广州黄埔"/>
    </bean>

</beans>
