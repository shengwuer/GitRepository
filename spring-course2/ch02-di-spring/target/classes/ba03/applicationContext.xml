<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">

    <!--声明student对象
        注入 : 就是赋值的意思
        简单类型 : spring中规定java的基本数据类型和String都是简单类型.
        di : 给属相赋值
        1. set注入(设置注入) : sping调用类的set方法 ,你可以在set方法中完成属性赋值
            1). 简单类型的set注入
            <bean id="xx" class="yyy">
                <property name="属性名字" value="系属性的值"/>
                一property只能给一属性赋值
                <property...>
             </bean>
             2). 引用类型的set注入 : spring的调用类的set方法
                <bean id="xx" class="yyy">
                <property name="属性名称" ref="bean的id(对象的名称)"/>

                <p
             </bean>
         2. 构造注入 : spring 调用类的有参构造方法 ,在创建对象的同事 , 在啊构造方法中给属性赋值.
            构造注入使用 <constructor-arg>标签
             <constructor-arg>标签 : 一个 <constructor-arg>表示构造方法的一个参数
              <constructor-arg>标签属性 :
                    name : 表示构造方法的形参名
                    index : 表示构造方法的参数位置 , 参数从左往右位置是 0 ,1 , 2放入顺序
                    value : 构造方法的形参类型是简单类型 ,使用value
                         <bean id="xx" class="yyy">
                             <constructor-arg name="属性名字" value="系属性的值"/>
                              constructor-arg只能给一属性赋值
                             <constructor-arg...>
                         </bean>
                    ref : 构造方法的形参类型是引用类型 ,使用ref
                    <bean id="xx" class="yyy">
                             <constructor-arg name="属性名字" ref="系属性的值"/>
                    </bean>

    -->
    <!--s使用name属性实现构造方法注入-->
    <bean id="myStudent" class="com.lypowernode.ba03.Student">
        <constructor-arg name="myname" value="生悟"/><!--set注入-->
        <constructor-arg name="myage" value="29"/>
        <constructor-arg name="myschool" ref="mySchool"/>
    </bean>

    <!--使用index属性-->
    <bean id="myStudent2" class="com.lypowernode.ba03.Student">
        <constructor-arg index="0" value="佐民"/>
        <constructor-arg index="1" value="33"/>
        <constructor-arg index="2" ref="mySchool"/>
    </bean>

    <!--index默认值省略index name ,但是要按顺序来-->
    <bean id="myStudent3" class="com.lypowernode.ba03.Student">
        <constructor-arg value="桂庭"/>
        <constructor-arg value="34"/>
        <constructor-arg ref="mySchool"/>
    </bean>

    <!--声明School类的对象mySchool-->
    <bean id="mySchool" class="com.lypowernode.ba03.School">
        <property name="name" value="黄埔一期"/>
        <property name="address" value="广州黄埔"/>
    </bean>

    <!--非自定义类使用构造方法注入-->
    <bean id="myFile" class="java.io.File">
        <constructor-arg name="parent" value="E:\Git"/>
        <constructor-arg name="child" value="LICENSE.txt"/>
    </bean>

</beans>
